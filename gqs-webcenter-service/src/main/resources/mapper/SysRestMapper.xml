<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gaoqisen.webcenter.mapper.SysRestMapper">
  <resultMap id="BaseResultMap" type="com.gaoqisen.webcenter.entity.SysRest">
    <!--@mbg.generated-->
    <!--@Table sys_rest-->
    <result column="digest" jdbcType="VARCHAR" property="digest" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="api_name" jdbcType="VARCHAR" property="apiName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="application_name" jdbcType="VARCHAR" property="applicationName" />
    <result column="permissions" jdbcType="VARCHAR" property="permissions" />
  </resultMap>

  <select id="getPermissionsByUserId" resultType="java.lang.String">
    select a.digest from sys_rest a
      left join sys_role_rest b on a.digest = b.rest_id
      left join sys_user_role c on c.role_id = b.role_id
    where c.user_id = #{userId} and a.permissions not in ('anon', 'authc') and a.application_name = #{applicationName}
  </select>

  <select id="getUrlByUserIdAndApplicationName" resultType="java.lang.String">
    select a.url from sys_rest a
     left join sys_role_rest b on a.digest = b.rest_id
     left join sys_user_role c on c.role_id = b.role_id
    where c.user_id = #{userId} and a.application_name = #{applicationName}
  </select>

  <select id="queryDigestByApplicationName" resultType="java.lang.String">
    select a.digest from sys_rest a
    left join sys_role_rest b on a.digest = b.rest_id
    where b.role_id = #{roleId} and a.application_name = #{applicationName}
  </select>

</mapper>